---
published: true

layout: single

title: "[2023-03-28] 1. ROS 노드 통신 의문점"

categories: [Devcourse-TIL,ROS]

tags: ROS

toc: true

toc_label : 목차

toc_sticky: true

author_profile: false

sidebar :
    nav : "docs"
---

### 다양한 환경에서 노드간 통신이 잘 이루어지는가?



#### (1) 누락 없이 모두 잘 도착하는가? 

- 파이썬 파일 2개랑 런치파일 1개를 만들어서 테스트 해보자
  - sender_serial.py
  - receiver_seerial.py
  - sr_serial.launch
- 숫자를 순차적으로 보내서 누락된게 있는지 확인해보자
  - 그런데 보낸 쪽이 안 보낸건지, 받는 쪽이 못 받은건지 구분할 수 있나?
- 중간보다는 맨 처음과 끝에서 누락되는지 잘 살펴보자
- 받는 쪽을 먼저 실행시켜 놓고, 그 다음에 보내는 쪽을 실행시켜야 하지 않나?
  - roslaunch로는 노드를 순서대로 실행시킬 수 없으니 rosrun을 사용하자
  - 더 좋고 편한 방법은 없을까?



#### (2) 데이터 크기에 따른 전송속도는 어떻게 되는가?

- 파이썬 파일 2개랑 런치파일 1개를 만들어서 테스트 해보자

  - sender_speed.py

  - receiver_speed.py

  - sr_speedl.launch

- 정해진 크기의 데이터를 반복해서 왕창 보내자

  - 보내는 쪽은 10분 동안 시간을 정해 놓고 쉴 새 없이 보내자
  - 10분 동안 몇 바이트를 보냈는지 체크해서 송신 속도를 계산해보자
  - 받는 쪽도 10분 동안 시간을 정해놓고 모두 얼마나 받았는지 체크해서 수신 속도를 계산하자

- 받는 쪽이 없으면 어떻게 될까?

  - 토픽에 대해서 구독하는 노드가 없으면 송신속도가 더 빨라지나?

    

#### (3) 도착하는 데이터를 미처 처리하지 못하면 어떻게 되는가?

- 파이썬 파일 2개랑 런치파일 1개를 만들어서 테스트 해보자

  - sender_overflow.py

  - receiver_overflow.py

  - sr_overflow.launch

- 받는 쪽을 버벅되게 만들어 놓고 데이터를 왕창 보내자

  - 구독자의 콜백함수 안에 시간 많이 걸리는 코드를 넣어서 토픽 처리에 시간이 걸리도록 만들자

- 콜백 함수가 끝나지 않았는데 토픽이 새로 도착하며 어떻게 되는가?

  - 도착한 토픽은 임시로 어딘가에 쌓이는가? 그걸 나중에 꺼내서 처리할 수 있는가?
  - 아님 그냥 없어지는가? 한 번 못 받은 토픽은 영영 못 받는 것인가?
  - 발행자는 이 사실을 아는가? 알려줄 수 있는 방법이 있는가?



#### (4) 주기적 발송에서 타임슬롯을 오버하면 어떻게 되는가?

- 파이썬 파일 2개랑 런치파일 1개를 만들어서 테스트 해보자

  - sender_timeslot.py

  - receiver_timeslot.py

  - sr_timeslot.launch

- 1초에 5번 반복하게 하고 작업시간이 0.2초가 넘게 만들어보자

  - Rate(5)로 세팅하고 sleep() 앞에 들어간 작업코드의 수행시간을 늘려보자
  - 늘렸다 줄었다 변동성 있게 해보자. 입력값을 받아서 이걸 조정할 수 있게 만들까?

- 1초에 5번 규칙을 지킬 수 없으면 어떻게 할까?

  - 앞에서부터 쭉 밀리는 식으로 일을 할까?

  - 쉬는 시간을 조정할까?

  - 이번에 3번만 하고 다음번을 기약할까?

    

#### (5) 협업해야 하는 노드를 순서대로 기동시킬 수 있는가?

- 파이썬 파일 5개랑 런치파일 1개를 만들자

  - first.py

  - second.py
  - third.py
  - fourth.py
  - receiver.py
  - sr_order.launch

- 순서대로 receiver에 메시지를 보내도록 만듬

  - receiver는 도착한 순서대로 출력함 (결과적으로 First-Second-Third-Fourth 순서대로 출력해야 함)
  - 앞에 있는 노드가 Topic을 보내기 전에 먼저 Topic을 보내면 안됨

- 어떻게 동기를 맞추고 순서를 맞출 수 있을까?

  - Launch 파일을 이용해서 할 수 있을까?
  - ROS의 도움으로 할 수 있을까?
  - 프로그래밍을 따로 작성해야 하는 것인가?

